import asyncio
import feedparser
import requests
import re
import random
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher
from aiogram.utils.markdown import hbold
from aiogram.enums.parse_mode import ParseMode
import pytz

# üîé –í—Å—Ç–∞–≤—å —Å–≤–æ–π –∫–ª—é—á
TOKEN = "7918775198:AAFCYlnMQMed_GDo0HXBnRPxTrGB-IhaGnY"
CHANNEL_ID = "@newspoliticcccals"

# üåç –°–ø–∏—Å–æ–∫ RSS-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ (–¢–æ–ª—å–∫–æ –Ω–∞ —É–∫—Ä —è–∑—ã–∫–µ –∏ –ø–æ —Ç–µ–º–µ –ø–æ–ª–∏—Ç–∏–∫–∏/–≤–æ–π–Ω–∞)
RSS_FEEDS = [
    "https://censor.net/rss/all.xml",         # –¶–µ–Ω–∑–æ—Ä.–ù–ï–¢ (–ø–æ–ª–∏—Ç–∏–∫–∞, –≤–æ–π–Ω–∞)
    "https://glavcom.ua/rss/all.xml",        # –ì–ª–∞–≤–∫–æ–º (–ø–æ–ª–∏—Ç–∏–∫–∞, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞)
    "https://telegraf.com.ua/rss.xml",       # –¢–µ–ª–µ–≥—Ä–∞—Ñ (–Ω–æ–≤–æ—Å—Ç–∏, —ç–∫–æ–Ω–æ–º–∏–∫–∞)
    "https://focus.ua/rss/all.xml",          # –§–æ–∫—É—Å (–∞–Ω–∞–ª–∏—Ç–∏–∫–∞, –ø–æ–ª–∏—Ç–∏–∫–∞, –≤–æ–π–Ω–∞)
    "https://tsn.ua/rss/full.rss",           # –¢–°–ù
    "https://24tv.ua/rss/all.xml",           # 24 –∫–∞–Ω–∞–ª
    "https://rss.unian.net/site/news_ukr.rss", # –£–ù–ò–ê–ù
]

# üß† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# üìÇ –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å
posted_links = set()

def clean_html(text):
    """–£–¥–∞–ª—è–µ—Ç HTML-—Ç–µ–≥–∏, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç"""
    return re.sub(r"<[^>]+>", "", text)

async def fetch_news():
    """–ü—É–±–ª–∏–∫—É–µ–º –ø–æ –æ–¥–Ω–æ–º—É –ø–æ—Å—Ç—É –≤ —á–∞—Å —Ç–æ–ª—å–∫–æ —Å 06:00 –¥–æ 23:59 Kyiv time."""
    global posted_links
    tz = pytz.timezone("Europe/Kyiv")

    while True:
        now = datetime.now(tz)
        hour = now.hour
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω–æ–º –ª–∏ –º—ã –æ–∫–Ω–µ
        if 6 <= hour <= 23:
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–ø—Ä–æ—Å–ª–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
            news_posts = []
            for feed_url in RSS_FEEDS:
                feed = feedparser.parse(feed_url)
                for entry in feed.entries[:3]:
                    if entry.link in posted_links:
                        continue
                    title = entry.title
                    summary = clean_html(entry.summary) if hasattr(entry, "summary") else "–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è"
                    post_text = (
                        f"<b>{hbold(title)}</b>\n\n"
                        f"{summary}\n\n"
                        f"<a href='{entry.link}'>–ß–∏—Ç–∞—Ç–∏ –ø–æ–≤–Ω—ñ—Å—Ç—é</a>"
                    )
                    news_posts.append(post_text)
                    posted_links.add(entry.link)

            if news_posts:
                post = random.choice(news_posts)
                await bot.send_message(CHANNEL_ID, post)
                print(f"‚úÖ {now.strftime('%H:%M')} ‚Äî –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª–∏ 1 –ø–æ—Å—Ç, –∂–¥—ë–º —Å–ª–µ–¥—É—é—â–∏–π —á–∞—Å")
            else:
                print(f"‚ö†Ô∏è {now.strftime('%H:%M')} ‚Äî –Ω–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ—Ç, –∂–¥—ë–º —á–∞—Å")
        else:
            # –°–ø–∏–º –±–µ–∑ –ø–æ—Å—Ç–æ–≤
            print(f"üò¥ {now.strftime('%H:%M')} ‚Äî —Å–ø–∏–º –¥–æ 6:00, –æ—á–µ—Ä–µ–¥–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ —á–∞—Å")

        # –ñ–¥—ë–º —Ä–æ–≤–Ω–æ 1 —á–∞—Å –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–µ–π
        await asyncio.sleep(3600)

async def main():
    await fetch_news()

if __name__ == "__main__":
    asyncio.run(main())


